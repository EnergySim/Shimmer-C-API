// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ObjectCluster.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace com.shimmerresearch.datastructure {

  /// <summary>Holder for reflection information generated from ObjectCluster.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ObjectClusterReflection {

    #region Descriptor
    /// <summary>File descriptor for ObjectCluster.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ObjectClusterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNPYmplY3RDbHVzdGVyLnByb3RvEgh0dXRvcmlhbCKCAwoNT2JqZWN0Q2x1",
            "c3RlchIMCgRuYW1lGAEgASgJEgoKAmlkGAIgASgFEg0KBWVtYWlsGAMgASgJ",
            "EkQKEWNvbW11bmljYXRpb25UeXBlGAQgASgOMikudHV0b3JpYWwuT2JqZWN0",
            "Q2x1c3Rlci5Db21tdW5pY2F0aW9uVHlwZRI1CgdkYXRhTWFwGAUgAygLMiQu",
            "dHV0b3JpYWwuT2JqZWN0Q2x1c3Rlci5EYXRhTWFwRW50cnkaNAoUU2hpbW1l",
            "ckZvcm1hdENsdXN0ZXISDgoGZm9ybWF0GAEgASgJEgwKBHVuaXQYAiABKAka",
            "XAoMRGF0YU1hcEVudHJ5EgsKA2tleRgBIAEoCRI7CgV2YWx1ZRgCIAEoCzIs",
            "LnR1dG9yaWFsLk9iamVjdENsdXN0ZXIuU2hpbW1lckZvcm1hdENsdXN0ZXI6",
            "AjgBIjcKEUNvbW11bmljYXRpb25UeXBlEgYKAkJUEAASBgoCU0QQARISCg5S",
            "YWRpb184MDJfMTVfNBACQl0KIWNvbS5zaGltbWVycmVzZWFyY2guZGF0YXN0",
            "cnVjdHVyZUIUU2hpbW1lck9iamVjdENsdXN0ZXKqAiFjb20uc2hpbW1lcnJl",
            "c2VhcmNoLmRhdGFzdHJ1Y3R1cmViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedCodeInfo(null, new pbr::GeneratedCodeInfo[] {
            new pbr::GeneratedCodeInfo(typeof(global::com.shimmerresearch.datastructure.ObjectCluster), global::com.shimmerresearch.datastructure.ObjectCluster.Parser, new[]{ "Name", "Id", "Email", "CommunicationType", "DataMap" }, null, new[]{ typeof(global::com.shimmerresearch.datastructure.ObjectCluster.Types.CommunicationType) }, new pbr::GeneratedCodeInfo[] { new pbr::GeneratedCodeInfo(typeof(global::com.shimmerresearch.datastructure.ObjectCluster.Types.ShimmerFormatCluster), global::com.shimmerresearch.datastructure.ObjectCluster.Types.ShimmerFormatCluster.Parser, new[]{ "Format", "Unit" }, null, null, null),
            null, })
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ObjectCluster : pb::IMessage<ObjectCluster> {
    private static readonly pb::MessageParser<ObjectCluster> _parser = new pb::MessageParser<ObjectCluster>(() => new ObjectCluster());
    public static pb::MessageParser<ObjectCluster> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.shimmerresearch.datastructure.ObjectClusterReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public ObjectCluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    public ObjectCluster(ObjectCluster other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      email_ = other.email_;
      communicationType_ = other.communicationType_;
      dataMap_ = other.dataMap_.Clone();
    }

    public ObjectCluster Clone() {
      return new ObjectCluster(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    private string email_ = "";
    public string Email {
      get { return email_; }
      set {
        email_ = pb::Preconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "communicationType" field.</summary>
    public const int CommunicationTypeFieldNumber = 4;
    private global::com.shimmerresearch.datastructure.ObjectCluster.Types.CommunicationType communicationType_ = global::com.shimmerresearch.datastructure.ObjectCluster.Types.CommunicationType.BT;
    public global::com.shimmerresearch.datastructure.ObjectCluster.Types.CommunicationType CommunicationType {
      get { return communicationType_; }
      set {
        communicationType_ = value;
      }
    }

    /// <summary>Field number for the "dataMap" field.</summary>
    public const int DataMapFieldNumber = 5;
    private static readonly pbc::MapField<string, global::com.shimmerresearch.datastructure.ObjectCluster.Types.ShimmerFormatCluster>.Codec _map_dataMap_codec
        = new pbc::MapField<string, global::com.shimmerresearch.datastructure.ObjectCluster.Types.ShimmerFormatCluster>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::com.shimmerresearch.datastructure.ObjectCluster.Types.ShimmerFormatCluster.Parser), 42);
    private readonly pbc::MapField<string, global::com.shimmerresearch.datastructure.ObjectCluster.Types.ShimmerFormatCluster> dataMap_ = new pbc::MapField<string, global::com.shimmerresearch.datastructure.ObjectCluster.Types.ShimmerFormatCluster>();
    public pbc::MapField<string, global::com.shimmerresearch.datastructure.ObjectCluster.Types.ShimmerFormatCluster> DataMap {
      get { return dataMap_; }
    }

    public override bool Equals(object other) {
      return Equals(other as ObjectCluster);
    }

    public bool Equals(ObjectCluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (Email != other.Email) return false;
      if (CommunicationType != other.CommunicationType) return false;
      if (!DataMap.Equals(other.DataMap)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (CommunicationType != global::com.shimmerresearch.datastructure.ObjectCluster.Types.CommunicationType.BT) hash ^= CommunicationType.GetHashCode();
      hash ^= DataMap.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Email);
      }
      if (CommunicationType != global::com.shimmerresearch.datastructure.ObjectCluster.Types.CommunicationType.BT) {
        output.WriteRawTag(32);
        output.WriteEnum((int) CommunicationType);
      }
      dataMap_.WriteTo(output, _map_dataMap_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (CommunicationType != global::com.shimmerresearch.datastructure.ObjectCluster.Types.CommunicationType.BT) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CommunicationType);
      }
      size += dataMap_.CalculateSize(_map_dataMap_codec);
      return size;
    }

    public void MergeFrom(ObjectCluster other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.CommunicationType != global::com.shimmerresearch.datastructure.ObjectCluster.Types.CommunicationType.BT) {
        CommunicationType = other.CommunicationType;
      }
      dataMap_.Add(other.dataMap_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Email = input.ReadString();
            break;
          }
          case 32: {
            communicationType_ = (global::com.shimmerresearch.datastructure.ObjectCluster.Types.CommunicationType) input.ReadEnum();
            break;
          }
          case 42: {
            dataMap_.AddEntriesFrom(input, _map_dataMap_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ObjectCluster message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CommunicationType {
        BT = 0,
        SD = 1,
        Radio_802_15_4 = 2,
      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class ShimmerFormatCluster : pb::IMessage<ShimmerFormatCluster> {
        private static readonly pb::MessageParser<ShimmerFormatCluster> _parser = new pb::MessageParser<ShimmerFormatCluster>(() => new ShimmerFormatCluster());
        public static pb::MessageParser<ShimmerFormatCluster> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::com.shimmerresearch.datastructure.ObjectCluster.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public ShimmerFormatCluster() {
          OnConstruction();
        }

        partial void OnConstruction();

        public ShimmerFormatCluster(ShimmerFormatCluster other) : this() {
          format_ = other.format_;
          unit_ = other.unit_;
        }

        public ShimmerFormatCluster Clone() {
          return new ShimmerFormatCluster(this);
        }

        /// <summary>Field number for the "format" field.</summary>
        public const int FormatFieldNumber = 1;
        private string format_ = "";
        public string Format {
          get { return format_; }
          set {
            format_ = pb::Preconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "unit" field.</summary>
        public const int UnitFieldNumber = 2;
        private string unit_ = "";
        public string Unit {
          get { return unit_; }
          set {
            unit_ = pb::Preconditions.CheckNotNull(value, "value");
          }
        }

        public override bool Equals(object other) {
          return Equals(other as ShimmerFormatCluster);
        }

        public bool Equals(ShimmerFormatCluster other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Format != other.Format) return false;
          if (Unit != other.Unit) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Format.Length != 0) hash ^= Format.GetHashCode();
          if (Unit.Length != 0) hash ^= Unit.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Format.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Format);
          }
          if (Unit.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Unit);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Format.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Format);
          }
          if (Unit.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Unit);
          }
          return size;
        }

        public void MergeFrom(ShimmerFormatCluster other) {
          if (other == null) {
            return;
          }
          if (other.Format.Length != 0) {
            Format = other.Format;
          }
          if (other.Unit.Length != 0) {
            Unit = other.Unit;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Format = input.ReadString();
                break;
              }
              case 18: {
                Unit = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
