<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ShimmerECGtoHR</name>
    </assembly>
    <members>
        <member name="T:ShimmerLibrary.ECGToHR">
            <summary>
            This class calculates heart rate from ECG data and timestamp. 
            </summary>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.#ctor">
            <summary>
            Constructor. Uses default sampling rate of 102.4Hz.
            </summary>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.#ctor(System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="samplingRate">Sampling Rate (Hz)</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.SetParameters(System.Double)">
            <summary>
            Sets parameters.
            </summary>
            <param name="samplingRate">Sampling Rate (Hz)</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.ResetParameters">
            <summary>
            Resets all parameters stored in the object.
            </summary>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.CalculateHeartRate(System.Double[],System.Int64[])">
            <summary>
            Calculates the heart rate from an array of ECG data and corresponding timestamps.
            Includes training algorithm which takes five seconds to complete.
            Size of output array equals size of input arrays.
            </summary>
            <param name="data">ECG data</param>
            <param name="timestamp">Calibrated timestamps</param>
            <returns>Heart rate</returns>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.CalculateHeartRate(System.Double,System.Int64)">
            <summary>
            Calculates heart rate from ECG data and corresponding timestamps.
            Data is fed in sample by sample.
            </summary>
            <param name="data">ECG data</param>
            <param name="timestamp">Calibrated timestamp</param>
            <returns>Heart rate</returns>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.SetHeartRateBufferSize(System.Int32)">
            <summary>
            Sets the number of calculated heart rates stored to test for invalid results.
            </summary>
            <param name="bufferSize">Buffer size</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.GetHeartRateBufferSize">
            <summary>
            Returns the number of calculated heart rates stored to test for invalid results.
            </summary>
            <returns>Buffer size</returns>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.SetUpperHeartRateLimit(System.Int32)">
            <summary>
            Sets the upper limit of valid heart rate outputs. 
            </summary>
            <param name="limit">Upper limit.</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.GetUpperHeartRateLimit">
            <summary>
            Gets the upper limit of valid heart rate outputs.
            </summary>
            <returns>Upper limit.</returns>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.SetLowerHeartRateLimit(System.Int32)">
            <summary>
            Sets the lower limit for valid heart rate outputs. 
            </summary>
            <param name="limit">Lower limit</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.GetLowerHeartRateLimit">
            <summary>
            Gets the lower limit of valid heart rate outputs. 
            </summary>
            <returns>Lower limit</returns>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.SetStandardDeviationTestMultiplier(System.Double)">
            <summary>
            Sets the standard deviation test multiplier. This defines the sensitivity of the algorithm to invalid results.
            </summary>
            <param name="mul">Standard deviation test multiplier</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.GetStandardDeviationTestMultiplier">
            <summary>
            Gets the standard deviation test multiplier. This defines the sensitivity of the algorithm to invalid results.
            </summary>
            <returns>Standard deviation test multiplier</returns>
        </member>
    </members>
</doc>
