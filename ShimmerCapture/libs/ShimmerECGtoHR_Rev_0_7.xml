<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ShimmerECGtoHR_Rev_0_7</name>
    </assembly>
    <members>
        <member name="T:ShimmerLibrary.ECGToHR">
            <summary>
            This class calculates heart rate from ECG data and timestamp. 
            </summary>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.#ctor(System.Double)">
            <summary>
            Constructor.
            </summary>
            <param name="samplingRate">Sampling Rate (Hz)</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.#ctor(System.Double,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="samplingRate">Sampling Rate (Hz)</param>
            <param name="trainingInterval">Training Period in seconds</param>
            <param name="statisticalLimitTestBufferSize">for HR estimate (integer value)</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.setStaticticalLimitsTest(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            When a ECG peak is detected the Heart Rate is calculated. Once calculated the R-R Interval value is stored in a buffer. Size of buffer is defined by statisticalLimitTestBuffersize. The buffer is used to calculate the standard deviation of the R-R Intervals. Heart Rate = -1 when the standard deviation of the buffer is above the test limit.
            </summary>
            <param name="testLimit">This sets the limit of the statistical R-R interval test in milliSeconds</param>
            <param name="statisticalLimitTestBufferSize">this sets the buffer size of the R-R Interval Test</param>
            <param name="heartRateUpperLimitTest">any heart rate above this upper limit is replaced with a -1 value</param>
            <param name="heartRateLowerLimitTest">any heart rate below this lower limit is replaced with a -1 value</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.SetParameters(System.Double,System.Int32)">
            <summary>
            Sets parameters, and resets the algorithm
            </summary>
            <param name="samplingRate">Sampling Rate in Hz</param>
            <param name="trainingPeriod">Training Period in Seconds</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.ResetParameters">
            <summary>
            Resets all parameters stored in the object.
            </summary>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.ECGToHRConversion(System.Double[],System.Int64[])">
            <summary>
            Calculates the heart rate from an array of ECG data and corresponding timestamps.
            Includes training algorithm which takes five seconds to complete.
            Size of output array equals size of input arrays.
            </summary>
            <param name="data">ECG data</param>
            <param name="timestamp">Calibrated timestamps in ms</param>
            <returns>Heart rate</returns>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.retrain(System.Boolean)">
            <summary> 
            Set this to false to force the algorithm to retrain itself.
            Note -1 values will be heart rate output until training is completed
            </summary>
            <param name="retrain">True to force retraining.</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.ECGToHRConversion(System.Double,System.Int64)">
            <summary>
            Calculates heart rate from ECG data and corresponding timestamps.
            Data is fed in sample by sample.
            </summary>
            <param name="data">ECG data</param>
            <param name="timestamp">Calibrated timestamp in ms</param>
            <returns>Heart rate</returns>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.SetUpperHeartRateLimit(System.Int32)">
            <summary>
            Sets the upper limit of valid heart rate outputs. 
            </summary>
            <param name="limit">Upper limit.</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.GetUpperHeartRateLimit">
            <summary>
            Gets the upper limit of valid heart rate outputs.
            </summary>
            <returns>Upper limit.</returns>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.SetLowerHeartRateLimit(System.Int32)">
            <summary>
            Sets the lower limit for valid heart rate outputs. 
            </summary>
            <param name="limit">Lower limit</param>
        </member>
        <member name="M:ShimmerLibrary.ECGToHR.GetLowerHeartRateLimit">
            <summary>
            Gets the lower limit of valid heart rate outputs. 
            </summary>
            <returns>Lower limit</returns>
        </member>
    </members>
</doc>
